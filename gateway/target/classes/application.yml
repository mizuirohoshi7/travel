server:
  port: 8088

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 1006939417427-aabgjug6hdl6pbaqvpe6tuvm0kad3sd2.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          naver:
            client-id: VgR3G9VpPbPYlVyikoAr
            client-secret: mt3VraE7UI
            client-name: Naver
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profile_image
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

---

spring:
  profiles: default
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: plan
          uri: http://localhost:8082
          predicates:
            - Path=/plans/** 
        - id: member
          uri: http://localhost:8083
          predicates:
            - Path=/members/** 
        - id: notification
          uri: http://localhost:8084
          predicates:
            - Path=/notifications/** 
        - id: follow
          uri: http://localhost:8085
          predicates:
            - Path=/follows/** 
        - id: like
          uri: http://localhost:8086
          predicates:
            - Path=/likes/**
        - id: frontend
          uri: http://localhost:8080
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true

---

spring:
  profiles: docker
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: plan
          uri: http://plan:8080
          predicates:
            - Path=/plans/** 
        - id: member
          uri: http://member:8080
          predicates:
            - Path=/members/** 
        - id: notification
          uri: http://notification:8080
          predicates:
            - Path=/notifications/** 
        - id: follow
          uri: http://follow:8080
          predicates:
            - Path=/follows/** 
        - id: like
          uri: http://like:8080
          predicates:
            - Path=/likes/**
        - id: frontend
          uri: http://frontend:8080
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true

server:
  port: 8080